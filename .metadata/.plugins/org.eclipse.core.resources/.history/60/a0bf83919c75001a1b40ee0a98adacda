#include<stdio.h>
#include <stdint.h>
#include <pthread.h>
#include<unistd.h>

int tab [5]={0,0,0,0,0};
static pthread_mutex_t mutex= PTHREAD_MUTEX_INITIALIZER;
int pthread_mutex_unlock (pthread_mutex_t * mutex);
int pthread_mutex_lock (pthread_mutex_t * mutex);
void *thread_func_1(void *arg) {
	pthread_mutex_lock (&mutex);
	tab[0]=0;
	printf("%d\n",tab[0]);
	tab[1]=20;
	printf("%d\n",tab[1]);
	tab[2]=30;
	printf("%d\n",tab[2]);
	tab[3]=40;
	printf("%d\n",tab[3]);
	tab[4]=50;
	printf("%d\n",tab[4]);
	pthread_mutex_unlock (&mutex);
	return NULL;
}

void *thread_func_2(void *arg) {
	sleep(0.2);
	pthread_mutex_lock (&mutex);
	printf("%d,%d,%d,%d,%d\n",tab[0],tab[1],tab[2],tab[3],tab[4]);
	pthread_mutex_unlock (&mutex);
	return NULL;

}

int main(int argc, char *argv[]) {

	pthread_t t1, t2;


	pthread_create(&t1, NULL, &thread_func_1, NULL);
	pthread_create(&t2, NULL, &thread_func_2, NULL);


	pthread_join(t1, NULL);
	pthread_join(t2, NULL);

	return 0;
}
